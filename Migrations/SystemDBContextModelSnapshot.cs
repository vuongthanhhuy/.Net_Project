// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(SystemDBContext))]
    partial class SystemDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccountsRestaurantMenus", b =>
                {
                    b.Property<string>("AccountsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RestaurantMenusId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AccountsId", "RestaurantMenusId");

                    b.HasIndex("RestaurantMenusId");

                    b.ToTable("AccountsRestaurantMenus");
                });

            modelBuilder.Entity("AccountsRooms", b =>
                {
                    b.Property<string>("AccountsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoomsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AccountsId", "RoomsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("AccountsRooms");
                });

            modelBuilder.Entity("FinalProject.Models.Accounts", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("FinalProject.Models.History", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2");

                    b.Property<float>("Revenue")
                        .HasColumnType("real");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("History");
                });

            modelBuilder.Entity("FinalProject.Models.Orderings", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("OrderingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("RestaurantMenuId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RestaurantMenusId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("Revenue")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("RestaurantMenusId");

                    b.ToTable("Orderings");
                });

            modelBuilder.Entity("FinalProject.Models.RestaurantMenus", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("RestaurantMenus");
                });

            modelBuilder.Entity("FinalProject.Models.RoomFacilities", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AirConditioner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BathRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Closet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SpecialFeatures")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wifi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId")
                        .IsUnique();

                    b.ToTable("RoomsFacilities");
                });

            modelBuilder.Entity("FinalProject.Models.RoomReviews", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Evaluation")
                        .HasColumnType("int");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomsId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccountsId");

                    b.HasIndex("RoomsId");

                    b.ToTable("RoomReviews");
                });

            modelBuilder.Entity("FinalProject.Models.Rooms", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Adults")
                        .HasColumnType("int");

                    b.Property<string>("BedType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("AccountsRestaurantMenus", b =>
                {
                    b.HasOne("FinalProject.Models.Accounts", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.RestaurantMenus", null)
                        .WithMany()
                        .HasForeignKey("RestaurantMenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccountsRooms", b =>
                {
                    b.HasOne("FinalProject.Models.Accounts", null)
                        .WithMany()
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Rooms", null)
                        .WithMany()
                        .HasForeignKey("RoomsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinalProject.Models.History", b =>
                {
                    b.HasOne("FinalProject.Models.Accounts", "Accounts")
                        .WithMany("Histories")
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Rooms", "Rooms")
                        .WithMany("Histories")
                        .HasForeignKey("RoomsId");

                    b.Navigation("Accounts");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("FinalProject.Models.Orderings", b =>
                {
                    b.HasOne("FinalProject.Models.Accounts", "Accounts")
                        .WithMany("Orderings")
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.RestaurantMenus", "RestaurantMenus")
                        .WithMany("Orderings")
                        .HasForeignKey("RestaurantMenusId");

                    b.Navigation("Accounts");

                    b.Navigation("RestaurantMenus");
                });

            modelBuilder.Entity("FinalProject.Models.RoomFacilities", b =>
                {
                    b.HasOne("FinalProject.Models.Rooms", "Rooms")
                        .WithOne("RoomFacilities")
                        .HasForeignKey("FinalProject.Models.RoomFacilities", "RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("FinalProject.Models.RoomReviews", b =>
                {
                    b.HasOne("FinalProject.Models.Accounts", "Accounts")
                        .WithMany("RoomReviews")
                        .HasForeignKey("AccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Models.Rooms", "Rooms")
                        .WithMany("RoomReviews")
                        .HasForeignKey("RoomsId");

                    b.Navigation("Accounts");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("FinalProject.Models.Accounts", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Orderings");

                    b.Navigation("RoomReviews");
                });

            modelBuilder.Entity("FinalProject.Models.RestaurantMenus", b =>
                {
                    b.Navigation("Orderings");
                });

            modelBuilder.Entity("FinalProject.Models.Rooms", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("RoomFacilities")
                        .IsRequired();

                    b.Navigation("RoomReviews");
                });
#pragma warning restore 612, 618
        }
    }
}
